{"version":3,"file":"index.js","sources":["../src/screenUtil.js","../src/utils.js","../src/styleTranslateMethods.js","../src/createStyle.js","../src/index.js"],"sourcesContent":["/**\n * 屏幕适配工具类\n */\n\nimport { Dimensions, StyleSheet } from 'react-native';\n\n/* 设备宽度 */\nexport const deviceWidth = Dimensions.get('window').width;\n\n/* 设备高度 */\nexport const deviceHeight = Dimensions.get('window').height;\n\n/*\n * 屏幕基准宽度\n */\nlet baseWidth = 750;\n\n// 单个像素大小，宽度\nlet w_pixelScale = deviceWidth / baseWidth;\n\n// 单个像素大小，高度\nlet h_pixelScale = deviceHeight / 100;\n\n/**\n * 设置屏幕基准宽度\n * @param  {Number} width 宽度\n * @return {undefined}\n */\nexport const setBaseWidth = width => {\n  baseWidth = width;\n  w_pixelScale = deviceWidth / width;\n};\n\n/**\n * 根据基准宽度计算实际像素\n * @param  {Number} width 设计像素\n * @return {Number}       实际像素\n */\nexport const rpx = width => {\n  if (width === 0) {\n    return 0;\n  }\n\n  const hairlineWidth = StyleSheet.hairlineWidth;\n\n  // 1 直接返回 hairlineWidth\n  if (Math.abs(width) === 1) {\n    return hairlineWidth * (width > 0 ? 1 : -1);\n  }\n\n  const actualWidth = w_pixelScale * width;\n\n  // 计算结果小于 hairlineWidth 则返回 hairlineWidth\n  if (Math.abs(actualWidth) <= hairlineWidth) {\n    return hairlineWidth * (width > 0 ? 1 : -1);\n  }\n\n  return Math.floor(actualWidth);\n};\n\n/**\n * 将高度转换为vh单位\n * @param  {Number} height 高度\n * @return {Number}    vh 高度\n */\nexport const vh = height => {\n  return Math.floor(h_pixelScale * height);\n};\n","/* 判断是否为数字 */\nexport const isNumber = arg => /^(-|\\+)?\\d+(\\.\\d+)?$/.test(arg);\n\n/* 判断是否为对象 */\nexport const isObject = obj => Object.prototype.toString.call(obj) === '[object Object]';\n\n/* 判断是否为数组 */\nexport const isArray = obj => Array.isArray(obj);\n","/**\n * 样式属性转换函数\n */\n\nimport { StyleSheet } from 'react-native';\n\nimport { rpx, vh } from './screenUtil';\nimport * as utils from './utils';\n\n/* 自定义单位对应转换方法 */\nconst unitFmtMap = { rpx, vh };\n\n/**\n * 获取样式单位\n * @param {String} styleValue 样式值\n */\nconst getUnit = styleValue => {\n  return Object.keys(unitFmtMap).find(key => {\n    return styleValue.endsWith(key) && utils.isNumber(styleValue.replace(key, ''));\n  });\n};\n\n/**\n * 样式值字符串转为数字\n * @param {String} str 样式值\n * @param {*} styleUnit 单位key\n * @return {Number} 转换后的数值\n */\nexport const unit2Num = (str, styleUnit = null) => {\n  // 纯数字直接返回数字\n  if (utils.isNumber(str)) {\n    return Number.parseFloat(str);\n  }\n\n  if (styleUnit) {\n    return unitFmtMap[styleUnit](Number.parseFloat(str));\n  }\n\n  if (typeof str === 'string') {\n    const unit = getUnit(str);\n    if (unit) {\n      return unitFmtMap[unit](Number.parseFloat(str));\n    }\n    throw Error(`样式单位格式错误：rpx ----> ${str}`);\n  } else {\n    throw Error(`样式单位格式错误：rpx ----> ${str}`);\n  }\n};\n\n/* 简写数值转换为数组 */\nconst value2Arr = str => str.replace(/[ ]+/g, ' ').split(' ');\n\n/**\n * 像素单位转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst rpx2px = (styleKey, styleValue) => {\n  if (typeof styleValue === 'string') {\n    const unit = getUnit(styleValue);\n\n    if (unit) {\n      return {\n        [styleKey]: unit2Num(styleValue, unit),\n      };\n    }\n  }\n\n  return false;\n};\n\n/**\n * mergin样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parseMargin = (styleKey, styleValue) => {\n  if (styleKey === 'margin' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    if (values.length === 1) {\n      return {\n        margin: unit2Num(values[0]),\n      };\n    } else if (values.length === 2) {\n      return {\n        marginVertical: unit2Num(values[0]),\n        marginHorizontal: unit2Num(values[1]),\n      };\n    } else if (values.length === 3) {\n      return {\n        marginTop: unit2Num(values[0]),\n        marginHorizontal: unit2Num(values[1]),\n        marginBottom: unit2Num(values[2]),\n      };\n    } else if (values.length === 4) {\n      return {\n        marginTop: unit2Num(values[0]),\n        marginRight: unit2Num(values[1]),\n        marginBottom: unit2Num(values[2]),\n        marginLeft: unit2Num(values[3]),\n      };\n    } else {\n      throw Error('margin 样式格式错误：' + styleValue);\n    }\n  }\n\n  return false;\n};\n\n/**\n * padding样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parsePadding = (styleKey, styleValue) => {\n  if (styleKey === 'padding' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    if (values.length === 1) {\n      return {\n        padding: unit2Num(values[0]),\n      };\n    } else if (values.length === 2) {\n      return {\n        paddingVertical: unit2Num(values[0]),\n        paddingHorizontal: unit2Num(values[1]),\n      };\n    } else if (values.length === 3) {\n      return {\n        paddingTop: unit2Num(values[0]),\n        paddingHorizontal: unit2Num(values[1]),\n        paddingBottom: unit2Num(values[2]),\n      };\n    } else if (values.length === 4) {\n      return {\n        paddingTop: unit2Num(values[0]),\n        paddingRight: unit2Num(values[1]),\n        paddingBottom: unit2Num(values[2]),\n        paddingLeft: unit2Num(values[3]),\n      };\n    } else {\n      throw Error(`padding样式格式错误：${styleValue}`);\n    }\n  }\n\n  return false;\n};\n\n/**\n * borderRadius样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parseBorderRadius = (styleKey, styleValue) => {\n  if (styleKey === 'borderRadius' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    if (values.length === 1) {\n      return {\n        borderRadius: unit2Num(values[0]),\n      };\n    } else if (values.length === 4) {\n      return {\n        borderTopLeftRadius: unit2Num(values[0]),\n        borderTopRightRadius: unit2Num(values[1]),\n        borderBottomRightRadius: unit2Num(values[2]),\n        borderBottomLeftRadius: unit2Num(values[3]),\n      };\n    } else {\n      throw Error(`borderRadius样式格式错误：${styleValue}`);\n    }\n  }\n\n  return false;\n};\n\n/**\n * boxShadow样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parseBoxShadow = (styleKey, styleValue) => {\n  if (styleKey === 'boxShadow' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    const shadowObj = {\n      shadowOffset: {\n        width: unit2Num(values[0]),\n        height: unit2Num(values[1]),\n      },\n      shadowRadius: unit2Num(values[2]),\n    };\n\n    if (values.length === 4) {\n      return {\n        ...shadowObj,\n        shadowColor: values[3],\n      };\n    } else if (values.length === 5) {\n      return {\n        ...shadowObj,\n        shadowOpacity: Number.parseFloat(values[3]),\n        shadowColor: values[4],\n      };\n    } else {\n      throw Error(`boxShadow样式格式错误：${styleValue}`);\n    }\n  }\n\n  return false;\n};\n\n/**\n * boxShadow样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parseTextShadow = (styleKey, styleValue) => {\n  if (styleKey === 'textShadow' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    const shadowObj = {\n      textShadowOffset: {\n        width: unit2Num(values[0]),\n        height: unit2Num(values[1]),\n      },\n      textShadowRadius: unit2Num(values[2]),\n    };\n\n    if (values.length === 4) {\n      return {\n        ...shadowObj,\n        textShadowColor: values[3],\n      };\n    } else if (values.length === 5) {\n      return {\n        ...shadowObj,\n        textShadowOpacity: Number.parseFloat(values[3]),\n        textShadowColor: values[4],\n      };\n    } else {\n      throw Error(`textShadow样式格式错误：${styleValue}`);\n    }\n  }\n\n  return false;\n};\n\n/**\n * borderRadius样式转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst parseBorder = (styleKey, styleValue) => {\n  if (styleKey === 'border' && typeof styleValue === 'string') {\n    const values = value2Arr(styleValue);\n\n    if (values.length === 3) {\n      return {\n        borderWidth: unit2Num(values[0]),\n        borderStyle: values[1],\n        borderColor: values[2],\n      };\n    } else {\n      throw Error(`border 样式格式错误：${styleValue}`);\n    }\n  }\n\n  return false;\n};\n\n/**\n * 定位占满父元素属性转换\n * @param  {String} styleKey   样式属性key\n * @param  {any} styleValue   样式属性值\n * @return {Object}\n */\nconst absoluteFill = (styleKey, styleValue) => {\n  if (styleKey === 'absoluteFill' && styleValue === true) {\n    return StyleSheet.absoluteFillObject;\n  }\n\n  return false;\n};\n\n/**\n * 转换函数数组\n * @type {Array}\n */\nexport default [\n  parseMargin,\n  parsePadding,\n  parseBorderRadius,\n  parseBoxShadow,\n  parseTextShadow,\n  parseBorder,\n  rpx2px,\n  absoluteFill,\n];\n","/**\n * 创建样式公共方法\n *   - 样式单位转换；\n *   - 自定义样式属性转换；\n */\n\nimport { StyleSheet } from 'react-native';\n\nimport styleTranslateMethods from './styleTranslateMethods';\nimport { isObject, isArray } from './utils';\n\n/**\n * 递归样式对象\n * @param  {Object} obj 样式对象\n * @return {Object}\n */\nconst styleMap = obj => {\n  let styleObj = {};\n\n  if (!obj) return obj;\n\n  Object.keys(obj).forEach(key => {\n    const item = obj[key];\n\n    if (typeof item === 'object') {\n      // 继续遍历\n      styleObj[key] = styleMap(item);\n    } else {\n      let styleRes = false;\n\n      styleTranslateMethods.find(method => {\n        styleRes = method(key, item);\n        return !!styleRes;\n      });\n\n      if (styleRes) {\n        styleObj = { ...styleObj, ...styleRes };\n      } else {\n        styleObj[key] = item;\n      }\n    }\n  });\n\n  return styleObj;\n};\n\n/**\n * 转换所有样式对象\n * @param {Object} styles 样式对象\n */\nconst create = styles => {\n  let styleObj = {};\n\n  if (isObject(styles)) {\n    styleObj = styleMap(styles);\n  } else if (isArray(styles)) {\n    styleObj = styles.map(style => styleMap(style));\n  }\n\n  return StyleSheet.create(styleObj);\n};\n\n/**\n * 创建单个样式对象\n * @param {Object} style 样式对象\n */\nexport const itemCreate = style => {\n  return create({ key: style }).key;\n};\n\nexport default create;\n","import create from './createStyle';\nimport { deviceWidth, deviceHeight, setBaseWidth, rpx } from './screenUtil';\nimport { unit2Num as unitFmt } from './styleTranslateMethods';\n\nexport { create, deviceWidth, deviceHeight, setBaseWidth, rpx, unitFmt };\n\nexport default {\n  create,\n  deviceWidth,\n  deviceHeight,\n  setBaseWidth,\n  rpx,\n  unitFmt,\n};\n"],"names":["deviceWidth","Dimensions","get","width","deviceHeight","height","baseWidth","w_pixelScale","h_pixelScale","setBaseWidth","rpx","hairlineWidth","StyleSheet","Math","abs","actualWidth","floor","vh","isNumber","arg","test","isObject","obj","Object","prototype","toString","call","isArray","Array","unitFmtMap","getUnit","styleValue","keys","find","key","endsWith","utils","replace","unit2Num","str","styleUnit","Number","parseFloat","unit","Error","value2Arr","split","rpx2px","styleKey","_ref","parseMargin","values","length","margin","marginVertical","marginHorizontal","marginTop","marginBottom","marginRight","marginLeft","parsePadding","padding","paddingVertical","paddingHorizontal","paddingTop","paddingBottom","paddingRight","paddingLeft","parseBorderRadius","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","parseBoxShadow","shadowObj","shadowOffset","shadowRadius","_extends","shadowColor","shadowOpacity","parseTextShadow","textShadowOffset","textShadowRadius","textShadowColor","textShadowOpacity","parseBorder","borderWidth","borderStyle","borderColor","absoluteFill","absoluteFillObject","styleMap","styleObj","forEach","item","styleRes","styleTranslateMethods","method","create","styles","map","style","unitFmt"],"mappings":"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"}